apply plugin: 'com.android.library'

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.3"

    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
        ndk {
            //生成so库名称 也是System.load
           // moduleName "vm"
            // 过滤SO库架构
            abiFilters 'armeabi-v7a', 'arm64-v8a'
        }
    }
//    resourcePrefix 'vm_'
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    /*externalNativeBuild {
        ndkBuild {
            path file('src/main/jni/Android.mk')
        }
    }*/ //注释就不编译jni 直接使用jniLibs/so
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    lintOptions {
        abortOnError false
        checkReleaseBuilds false
    }
    /*sourceSets.main {
       // jni.srcDirs = ['src/main/jni']
        //jniLibs.srcDirs = ['src/main/jniLibs']//加载/so
    }*/
    sourceSets {
        main {
            manifest.srcFile 'src/main/AndroidManifest.xml'
            java.srcDirs = ['src/main/java']
            res.srcDirs = ['src/main/res']
            aidl.srcDirs = ['src/main/aidl']
            assets.srcDirs = ['src/main/assets']
            jni.srcDirs = []//不用项目自动生成jni目录
            jniLibs.srcDirs = ['src/main/jniLibs']//直接打包so
            resources.srcDirs = ['src/main/resources']
            renderscript.srcDirs = ['src/main/rs']
        }

    }
}
//构建so
tasks.withType(JavaCompile) {
    compileTask -> compileTask.dependsOn CopyToJniLibs
}
//构建so
task ndkBuild(type: Exec, description: 'Compile JNI source via NDK') {
    Properties properties = new Properties()
    properties.load(project.rootProject.file('local.properties').newDataInputStream())
    def ndkDir = properties.getProperty('ndk.dir')
    commandLine "$ndkDir/ndk-build.cmd",
            "NDK_PROJECT_PATH=$projectDir.absolutePath\\build",
            "APP_BUILD_SCRIPT=$projectDir.absolutePath\\src\\main\\jni\\Android.mk",
            "NDK_APPLICATION_MK=$projectDir.absolutePath\\src\\main\\jni\\Application.mk"
    //你自己的mk文件目录
}
//shell:ndk-build NDK_PROJECT_PATH=. APP_BUILD_SCRIPT=./Android.mk NDK_APPLICATION_MK=./Application.mk

// copy so库到指定的目录jniLibs
task CopyToJniLibs(type: Copy, dependsOn: 'ndkBuild', description: 'copy the native libs to jniLibs') {
    from fileTree(dir: file(buildDir.absolutePath + '/libs'), include: '**/*.so')
    into file('src/main/jniLibs')
}
dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation 'androidx.appcompat:appcompat:1.3.0'

    implementation 'me.weishu:free_reflection:3.0.1'
    implementation project(':Bcore:xposed')
    implementation 'com.swift.sandhook:hooklib:4.2.0'
}